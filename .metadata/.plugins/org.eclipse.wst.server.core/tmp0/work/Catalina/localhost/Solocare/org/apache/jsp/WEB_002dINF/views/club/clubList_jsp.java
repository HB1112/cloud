/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-24 07:05:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.club;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.springmvc.domain.club;
import java.util.*;

public final class clubList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/menu.jsp", Long.valueOf(1735005451750L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1731463723702L));
    _jspx_dependants.put("jar:file:/D:/cloud/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Solocare/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.springmvc.domain.club");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("    <title>동호회 목록</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        .club-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap; \r\n");
      out.write("            gap: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .club-box {\r\n");
      out.write("            border: 1px solid #ccc; \r\n");
      out.write("            padding: 10px; \r\n");
      out.write("            width: calc(25% - 10px); \r\n");
      out.write("            box-sizing: border-box; \r\n");
      out.write("            cursor: pointer; \r\n");
      out.write("            transition: background-color 0.3s; \r\n");
      out.write("            background-color: #f8f9fa; /* 클럽 박스 배경색 */\r\n");
      out.write("        }\r\n");
      out.write("        .club-box:hover {\r\n");
      out.write("            background-color: #e2e6ea; /* 호버 시 배경색 */\r\n");
      out.write("        }\r\n");
      out.write("        .category-link {\r\n");
      out.write("            display: inline-block; /* 블록 요소로 설정 */\r\n");
      out.write("            width: 150px; /* 고정 너비 */\r\n");
      out.write("            height: 50px; /* 고정 높이 */\r\n");
      out.write("            margin: 5px;\r\n");
      out.write("            border: 1px solid #ccc; /* 기존 리스트와 동일한 테두리 색상 */\r\n");
      out.write("            background-color: #f8f9fa; /* 클럽 박스와 동일한 배경색 */\r\n");
      out.write("            color: #333; /* 텍스트 색상 */\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            text-align: center; /* 텍스트 중앙 정렬 */\r\n");
      out.write("            line-height: 50px; /* 세로 중앙 정렬 */\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("        .category-link:hover {\r\n");
      out.write("            background-color: #e2e6ea; /* 호버 시 배경색 유지 */\r\n");
      out.write("        }\r\n");
      out.write("        .region-list {\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            width: 50%;\r\n");
      out.write("            display: flex; /* Flexbox로 정렬 */\r\n");
      out.write("            flex-wrap: wrap; /* 여러 줄로 나열 */\r\n");
      out.write("        }\r\n");
      out.write("        .region-item {\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            color: #333; /* 텍스트 색상 */\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            margin: 3px; /* 간격 줄이기 */\r\n");
      out.write("            padding: 8px; /* 패딩 줄이기 */\r\n");
      out.write("            border: 1px solid #ccc; /* 테두리 추가 */\r\n");
      out.write("            border-radius: 5px; /* 모서리 둥글게 */\r\n");
      out.write("            background-color: #f8f9fa; /* 배경색 */\r\n");
      out.write("            width: calc(20% - 6px); /* 너비 조정 */\r\n");
      out.write("            box-sizing: border-box; /* 박스 사이징 설정 */\r\n");
      out.write("            text-align: center; /* 중앙 정렬 */\r\n");
      out.write("        }\r\n");
      out.write("        .region-item:hover {\r\n");
      out.write("            color: darkblue;\r\n");
      out.write("            background-color: #e2e6ea; /* 호버 시 배경색 변경 */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n");
      out.write("         ");
      out.write("\r\n");
      out.write("   <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Noto Sans', sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar {\r\n");
      out.write("            background-color: white; \r\n");
      out.write("            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        .navbar-brand {\r\n");
      out.write("            font-family: 'Noto Serif', serif;\r\n");
      out.write("            font-size: 1.8rem;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #005B96;\r\n");
      out.write("            transition: transform 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar-brand:hover {\r\n");
      out.write("            transform: scale(1.1);\r\n");
      out.write("        }\r\n");
      out.write("        .navbar-nav .nav-link {\r\n");
      out.write("            margin: 0 15px;\r\n");
      out.write("            color: #005B96; \r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar-nav .nav-link:hover {\r\n");
      out.write("            color: #FFD700; \r\n");
      out.write("            transform: translateY(-3px);\r\n");
      out.write("        }\r\n");
      out.write("        .dropdown-menu {\r\n");
      out.write("            background: #f8f9fa; \r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        .dropdown-item {\r\n");
      out.write("            color: #005B96; \r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("        }\r\n");
      out.write("        .dropdown-item:hover {\r\n");
      out.write("            background: #005B96; \r\n");
      out.write("            color: white; \r\n");
      out.write("        }\r\n");
      out.write("        .search {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-left: auto; /* 오른쪽 끝으로 붙이기 */\r\n");
      out.write("        }\r\n");
      out.write("        .search input {\r\n");
      out.write("            border-radius: 30px;\r\n");
      out.write("            border: 2px solid #005B96; \r\n");
      out.write("            margin-right: 10px; /* 검색창과 버튼 사이 간격 */\r\n");
      out.write("        }\r\n");
      out.write("        .search button {\r\n");
      out.write("            color: white;\r\n");
      out.write("            background: #005B96; \r\n");
      out.write("            border-radius: 50%;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 5px 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .user-links {\r\n");
      out.write("        	display : flex;\r\n");
      out.write("            margin-left: 20px; /* 로그인/회원가입 간격 */\r\n");
      out.write("        }\r\n");
      out.write("        .main-content {\r\n");
      out.write("            margin-top: 80px; /* 내비게이션 바 높이에 맞춰 여백 추가 */\r\n");
      out.write("        }\r\n");
      out.write("        .navbar-collapse {\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		    justify-content: space-between; /* 양쪽 끝으로 배치 */\r\n");
      out.write("		    width: 100%; /* 전체 너비 사용 */\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light fixed-top\" style=\"font-family: 'Montserrat', sans-serif;\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"/Solocare/home\">Solo Care</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("        <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("        <ul class=\"navbar-nav\">\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/Solocare/search\">쇼핑</a>\r\n");
      out.write("            </li>\r\n");
      out.write("             <li class=\"nav-item\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/Solocare/club/board\">동호회</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item dropdown\">\r\n");
      out.write("                <a class=\"nav-link\" href=\"/Solocare/community\">커뮤니티</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item dropdown\">\r\n");
      out.write("                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"policyDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("                    정책 지원 \r\n");
      out.write("                </a>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("        ");

            if (request.getSession().getAttribute("mem") != null) {
        
      out.write("\r\n");
      out.write("            <div class=\"user-links\">\r\n");
      out.write("                <p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mem.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님 환영합니다</p>\r\n");
      out.write("                <a href=\"/Solocare/infocheck\" class=\"nav-link\">내 정보</a>\r\n");
      out.write("                <a href=\"/Solocare/logout\" class=\"nav-link\">로그아웃</a>\r\n");
      out.write("                <a href=\"/Solocare/list\" class=\"nav-link\">일정관리</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");

            } else {
        
      out.write("\r\n");
      out.write("            <div class=\"user-links\">\r\n");
      out.write("                <a href=\"/Solocare/login\" class=\"nav-link\">로그인</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("    </nav>\r\n");
      out.write("    <h1>동호회 목록</h1>\r\n");
      out.write("    <p><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/club/board\">동호회 홈으로 이동</a></p>\r\n");
      out.write("    <div>\r\n");
      out.write("        <a class=\"category-link\" href=\"list\">전체</a>\r\n");
      out.write("        <span class=\"category-link\" id=\"categoryToggle\">카테고리</span>\r\n");
      out.write("        <span class=\"category-link\" id=\"regionToggle\">지역</span>\r\n");
      out.write("\r\n");
      out.write("        <!-- 지역 선택 리스트 -->\r\n");
      out.write("        <div id=\"regionDropdown\" class=\"dropdown\" style=\"display: none;\">\r\n");
      out.write("            <div class=\"region-list\">\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=서울특별시\">서울</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=인천광역시\">인천</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=대구광역시\">대구</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=대전광역시\">대전</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=광주광역시\">광주</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=울산광역시\">울산</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=경기도\">경기</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=부산광역시\">부산</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=강원도\">강원</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=충청북도\">충북</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=충청남도\">충남</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=전라북도\">전북</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=전라남도\">전남</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=경상북도\">경북</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=경상남도\">경남</a>\r\n");
      out.write("                <a class=\"region-item\" href=\"list?region=제주특별자치도\">제주</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 카테고리 드롭다운 -->\r\n");
      out.write("        <div class=\"dropdown\" id=\"categoryDropdown\" style=\"display: none;\">\r\n");
      out.write("            <a class=\"category-link\" href=\"list?category=스포츠 및 e스포츠\">스포츠 및 e스포츠</a>\r\n");
      out.write("            <a class=\"category-link\" href=\"list?category=자기개발\">자기개발</a>\r\n");
      out.write("            <a class=\"category-link\" href=\"list?category=봉사 및 사회적 활동\">봉사 및 사회적 활동</a>\r\n");
      out.write("            <a class=\"category-link\" href=\"list?category=문화 및 예술\">문화 및 예술</a>\r\n");
      out.write("            <a class=\"category-link\" href=\"list?category=여행 및 탐험\">여행 및 탐험</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- 검색 폼 수정 -->\r\n");
      out.write("    <form method=\"GET\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/club/list\">\r\n");
      out.write("	    <input type=\"hidden\" name=\"category\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${selectedCategory}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/> <!-- 선택한 카테고리 히든 필드 -->\r\n");
      out.write("	    <input type=\"hidden\" name=\"region\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${region}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/> <!-- 현재 지역 유지 -->\r\n");
      out.write("\r\n");
      out.write("        <select name=\"searchType\" id=\"searchType\">\r\n");
      out.write("            <option value=\"clubName\">동호회 이름</option>\r\n");
      out.write("            <option value=\"clubDescription\">설명</option>\r\n");
      out.write("        </select>\r\n");
      out.write("        <input type=\"text\" name=\"query\" placeholder=\"검색어 입력\" required>\r\n");
      out.write("        \r\n");
      out.write("        <button type=\"submit\">검색</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"club-container\">\r\n");
      out.write("        ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <button onclick=\"checkLoginAndRedirect('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/club/regist')\" class=\"btn btn-primary\">동호회 만들기</button>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function checkLoginAndRedirect(url) {\r\n");
      out.write("	    ");
 if (request.getSession().getAttribute("mem") == null) { 
      out.write("\r\n");
      out.write("	        alert('로그인 해주세요.'); // 로그인하지 않은 경우 알림\r\n");
      out.write("	        window.location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login\"; // 로그인 페이지로 리다이렉트\r\n");
      out.write("	        return false; // 함수 종료\r\n");
      out.write("	    ");
 } 
      out.write("\r\n");
      out.write("	    \r\n");
      out.write("	    // 로그인한 경우 해당 URL로 이동\r\n");
      out.write("	    window.location.href = url;\r\n");
      out.write("	}\r\n");
      out.write("	document.getElementById(\"categoryToggle\").addEventListener(\"click\", function() {\r\n");
      out.write("	    var categoryDropdown = document.getElementById(\"categoryDropdown\");\r\n");
      out.write("	    var regionDropdown = document.getElementById(\"regionDropdown\");\r\n");
      out.write("	    \r\n");
      out.write("	    // 카테고리 드롭다운 보이기/숨기기\r\n");
      out.write("	    categoryDropdown.style.display = (categoryDropdown.style.display === \"none\" || categoryDropdown.style.display === \"\") ? \"block\" : \"none\"; \r\n");
      out.write("	    \r\n");
      out.write("	    // 지역 드롭다운 숨기기\r\n");
      out.write("	    regionDropdown.style.display = \"none\";\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	document.getElementById(\"regionToggle\").addEventListener(\"click\", function() {\r\n");
      out.write("	    var regionDropdown = document.getElementById(\"regionDropdown\");\r\n");
      out.write("	    var categoryDropdown = document.getElementById(\"categoryDropdown\");\r\n");
      out.write("	    \r\n");
      out.write("	    // 지역 드롭다운 보이기/숨기기\r\n");
      out.write("	    regionDropdown.style.display = (regionDropdown.style.display === \"none\" || regionDropdown.style.display === \"\") ? \"block\" : \"none\"; \r\n");
      out.write("	    \r\n");
      out.write("	    // 카테고리 드롭다운 숨기기\r\n");
      out.write("	    categoryDropdown.style.display = \"none\";\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/views/club/clubList.jsp(130,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("club");
    // /WEB-INF/views/club/clubList.jsp(130,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/club/clubList.jsp(130,8) '${clubs}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${clubs}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            <div class=\"club-box\" onclick=\"location.href='detail/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.clubNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("'\"> \r\n");
          out.write("                <h3>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.clubName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</h3>\r\n");
          out.write("                <p>회장: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.clubLeader}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                <p>설명: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.clubDescription}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                <p>카테고리: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.clubCategory}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("                <p>위치: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.region}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.district}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" </p>\r\n");
          out.write("                <p>회원 수: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${club.count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" 명</p>\r\n");
          out.write("            </div>\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }
}
